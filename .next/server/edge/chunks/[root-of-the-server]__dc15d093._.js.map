{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { NextResponse, type NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n  // Debug: Log all cookies on every request\n  console.log('MIDDLEWARE: Cookies:', request.cookies.getAll())\n\n  let supabaseResponse = NextResponse.next({\n    request,\n  })\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return request.cookies.getAll()\n        },\n        setAll(cookiesToSet) {\n          cookiesToSet.forEach(({ name, value, options }) => request.cookies.set(name, value))\n          supabaseResponse = NextResponse.next({\n            request,\n          })\n          cookiesToSet.forEach(({ name, value, options }) =>\n            supabaseResponse.cookies.set(name, value, options)\n          )\n        },\n      },\n    }\n  )\n\n  // Refresh session if expired - required for Server Components\n  const { data: { session } } = await supabase.auth.getSession()\n  // Debug: Log session for every request\n  console.log('MIDDLEWARE: Supabase session:', session)\n\n  // Define protected routes\n  const protectedRoutes = ['/dashboard', '/admin']\n  const isProtectedRoute = protectedRoutes.some(route => \n    request.nextUrl.pathname.startsWith(route)\n  )\n\n  // Define auth routes (login, signup)\n  const authRoutes = ['/login', '/signup']\n  const isAuthRoute = authRoutes.some(route => \n    request.nextUrl.pathname.startsWith(route)\n  )\n\n  // If accessing protected route without session, redirect to login\n  if (isProtectedRoute && !session) {\n    const redirectUrl = new URL('/login', request.url)\n    redirectUrl.searchParams.set('redirectTo', request.nextUrl.pathname)\n    return NextResponse.redirect(redirectUrl)\n  }\n\n  // If accessing auth routes with session, redirect to dashboard\n  if (isAuthRoute && session) {\n    return NextResponse.redirect(new URL('/dashboard', request.url))\n  }\n\n  // Admin route protection\n  if (request.nextUrl.pathname.startsWith('/admin')) {\n    if (!session) {\n      return NextResponse.redirect(new URL('/login', request.url))\n    }\n\n    // Check if user has admin role (this will be checked in the component as well)\n    const { data: profile } = await supabase\n      .from('profiles')\n      .select('role')\n      .eq('id', session.user.id)\n      .single()\n\n    if (profile?.role !== 'super_admin') {\n      return NextResponse.redirect(new URL('/dashboard', request.url))\n    }\n  }\n\n  return supabaseResponse\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n  ],\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,0CAA0C;IAC1C,QAAQ,GAAG,CAAC,wBAAwB,QAAQ,OAAO,CAAC,MAAM;IAE1D,IAAI,mBAAmB,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACvC;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,iLAAA,CAAA,qBAAkB,AAAD,sUAGhC;QACE,SAAS;YACP;gBACE,OAAO,QAAQ,OAAO,CAAC,MAAM;YAC/B;YACA,QAAO,YAAY;gBACjB,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAK,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;gBAC7E,mBAAmB,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACnC;gBACF;gBACA,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,iBAAiB,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;YAE9C;QACF;IACF;IAGF,8DAA8D;IAC9D,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAC5D,uCAAuC;IACvC,QAAQ,GAAG,CAAC,iCAAiC;IAE7C,0BAA0B;IAC1B,MAAM,kBAAkB;QAAC;QAAc;KAAS;IAChD,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAC5C,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGtC,qCAAqC;IACrC,MAAM,aAAa;QAAC;QAAU;KAAU;IACxC,MAAM,cAAc,WAAW,IAAI,CAAC,CAAA,QAClC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGtC,kEAAkE;IAClE,IAAI,oBAAoB,CAAC,SAAS;QAChC,MAAM,cAAc,IAAI,IAAI,UAAU,QAAQ,GAAG;QACjD,YAAY,YAAY,CAAC,GAAG,CAAC,cAAc,QAAQ,OAAO,CAAC,QAAQ;QACnE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,+DAA+D;IAC/D,IAAI,eAAe,SAAS;QAC1B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,yBAAyB;IACzB,IAAI,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW;QACjD,IAAI,CAAC,SAAS;YACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5D;QAEA,+EAA+E;QAC/E,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,SAC7B,IAAI,CAAC,YACL,MAAM,CAAC,QACP,EAAE,CAAC,MAAM,QAAQ,IAAI,CAAC,EAAE,EACxB,MAAM;QAET,IAAI,SAAS,SAAS,eAAe;YACnC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;QAChE;IACF;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}