{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/app/api/debug-auth/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { createRouteHandlerClient } from '@supabase/auth-helpers-nextjs'\nimport { cookies } from 'next/headers'\nimport { Database } from '@/types/database'\n\nexport async function GET() {\n  try {\n    const cookieStore = await cookies()\n    const supabase = createRouteHandlerClient<Database>({ cookies: () => cookieStore })\n\n    // Get current session\n    const { data: { session }, error: sessionError } = await supabase.auth.getSession()\n\n    // Test organization creation with current user\n    let orgTest = null\n    if (session?.user) {\n      const { data, error } = await supabase\n        .from('organizations')\n        .select('*')\n        .limit(1)\n      \n      orgTest = { data, error: error?.message }\n    }\n\n    return NextResponse.json({\n      success: true,\n      session: session ? {\n        user: {\n          id: session.user.id,\n          email: session.user.email,\n          email_confirmed_at: session.user.email_confirmed_at,\n          created_at: session.user.created_at\n        },\n        expires_at: session.expires_at\n      } : null,\n      sessionError: sessionError?.message,\n      orgTest,\n      env: {\n        hasSupabaseUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,\n        hasAnonKey: !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n        hasServiceRoleKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,\n        serviceRoleKeyLength: process.env.SUPABASE_SERVICE_ROLE_KEY?.length || 0\n      }\n    })\n\n  } catch (error) {\n    console.error('Debug auth error:', error)\n    return NextResponse.json({\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error'\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;QAChC,MAAM,WAAW,CAAA,GAAA,0KAAA,CAAA,2BAAwB,AAAD,EAAY;YAAE,SAAS,IAAM;QAAY;QAEjF,sBAAsB;QACtB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;QAEjF,+CAA+C;QAC/C,IAAI,UAAU;QACd,IAAI,SAAS,MAAM;YACjB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,KAAK,CAAC;YAET,UAAU;gBAAE;gBAAM,OAAO,OAAO;YAAQ;QAC1C;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS,UAAU;gBACjB,MAAM;oBACJ,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACnB,OAAO,QAAQ,IAAI,CAAC,KAAK;oBACzB,oBAAoB,QAAQ,IAAI,CAAC,kBAAkB;oBACnD,YAAY,QAAQ,IAAI,CAAC,UAAU;gBACrC;gBACA,YAAY,QAAQ,UAAU;YAChC,IAAI;YACJ,cAAc,cAAc;YAC5B;YACA,KAAK;gBACH,gBAAgB,CAAC;gBACjB,YAAY,CAAC;gBACb,mBAAmB,CAAC,CAAC,QAAQ,GAAG,CAAC,yBAAyB;gBAC1D,sBAAsB,QAAQ,GAAG,CAAC,yBAAyB,EAAE,UAAU;YACzE;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF","debugId":null}}]
}