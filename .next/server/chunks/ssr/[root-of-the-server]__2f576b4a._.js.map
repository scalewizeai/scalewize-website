{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/lib/supabase-client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\nimport { Database } from '@/types/database'\n\nexport const supabase = createBrowserClient<Database>(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n) "],"names":[],"mappings":";;;AAAA;AAAA;;AAGO,MAAM,WAAW,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/lib/auth-service.ts"],"sourcesContent":["import { supabase } from './supabase-client'\nimport { Organization, Profile } from '@/types/database'\n\nexport interface SignupData {\n  email: string\n  password: string\n  fullName: string\n  organizationName: string\n  organizationSlug: string\n}\n\nexport interface InviteUserData {\n  email: string\n  fullName: string\n  role: 'user' | 'admin'\n  organizationId: string\n}\n\nexport interface AuthError {\n  message: string\n  code?: string\n}\n\nexport class AuthService {\n  /**\n   * Sign up a new user and create an organization\n   */\n  static async signup(data: SignupData): Promise<{ user: any; organization: Organization; profile: Profile }> {\n    try {\n      // Create user account\n      const { data: authData, error: authError } = await supabase.auth.signUp({\n        email: data.email,\n        password: data.password,\n        options: {\n          data: {\n            full_name: data.fullName,\n            organization_name: data.organizationName,\n            organization_slug: data.organizationSlug,\n          }\n        }\n      })\n\n      if (authError) {\n        throw new Error(authError.message)\n      }\n\n      if (!authData.user) {\n        throw new Error('Failed to create user account')\n      }\n\n      // Create organization\n      const { data: orgData, error: orgError } = await supabase\n        .from('organizations')\n        .insert({\n          name: data.organizationName,\n          domain: data.organizationSlug,\n          subscription_status: 'trial',\n          plan_type: 'starter',\n          max_users: 50,\n          max_chat_sessions: 1000,\n          monthly_token_limit: 100000,\n          librechat_config: {},\n        })\n        .select()\n        .single()\n\n      if (orgError) {\n        throw new Error(`Failed to create organization: ${orgError.message}`)\n      }\n\n      // Create user profile\n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .insert({\n          id: authData.user.id,\n          email: data.email,\n          full_name: data.fullName,\n          organization_id: orgData.id,\n          role: 'admin', // First user is admin\n          is_active: true,\n        })\n        .select()\n        .single()\n\n      if (profileError) {\n        throw new Error(`Failed to create user profile: ${profileError.message}`)\n      }\n\n      return {\n        user: authData.user,\n        organization: orgData,\n        profile: profileData\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Invite a user to join an existing organization\n   */\n  static async inviteUser(data: InviteUserData): Promise<void> {\n    try {\n      // Use server endpoint to send invite email via service role to avoid client-side OTP flow issues\n      const response = await fetch('/api/auth/invite', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          email: data.email,\n          fullName: data.fullName,\n          role: data.role,\n          organizationId: data.organizationId,\n        }),\n      })\n\n      if (!response.ok) {\n        const payload = await response.json().catch(() => ({}))\n        throw new Error(payload.error || 'Failed to send invite')\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Send magic link to user's email\n   */\n  static async sendMagicLink(email: string, redirectParams?: Record<string, string>): Promise<void> {\n    try {\n      const baseUrl = `${window.location.origin}/auth/callback`\n      const query = redirectParams\n        ? `?${new URLSearchParams(redirectParams).toString()}`\n        : ''\n      const { error } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          emailRedirectTo: `${baseUrl}${query}`\n        }\n      })\n\n      if (error) {\n        throw new Error(error.message)\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Reset user password\n   */\n  static async resetPassword(email: string): Promise<void> {\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/reset-password`\n      })\n\n      if (error) {\n        throw new Error(error.message)\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Update user password\n   */\n  static async updatePassword(newPassword: string): Promise<void> {\n    try {\n      const { error } = await supabase.auth.updateUser({\n        password: newPassword\n      })\n\n      if (error) {\n        throw new Error(error.message)\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Change user email address\n   */\n  static async changeEmail(newEmail: string): Promise<void> {\n    try {\n      const { error } = await supabase.auth.updateUser({\n        email: newEmail\n      })\n\n      if (error) {\n        throw new Error(error.message)\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Reauthenticate user (for sensitive operations)\n   */\n  static async reauthenticate(password: string): Promise<void> {\n    try {\n      // For reauthentication, we'll use the current user's session\n      // This is a simplified approach - in a real app you might want to implement\n      // a more robust reauthentication flow\n      const { data: { user } } = await supabase.auth.getUser()\n      \n      if (!user) {\n        throw new Error('No authenticated user found')\n      }\n\n      // You could implement additional verification here if needed\n      // For now, we'll just verify the user is still authenticated\n      const { data: { session } } = await supabase.auth.getSession()\n      \n      if (!session) {\n        throw new Error('User session expired')\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Get current user's profile and organization\n   */\n  static async getCurrentUserData(): Promise<{ profile: Profile | null; organization: Organization | null }> {\n    try {\n      const { data: { user } } = await supabase.auth.getUser()\n      \n      if (!user) {\n        return { profile: null, organization: null }\n      }\n\n      const { data: profile, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single()\n\n      if (profileError) {\n        throw new Error(`Failed to fetch profile: ${profileError.message}`)\n      }\n\n      let organization = null\n      if (profile.organization_id) {\n        const { data: orgData, error: orgError } = await supabase\n          .from('organizations')\n          .select('*')\n          .eq('id', profile.organization_id)\n          .single()\n\n        if (orgError) {\n          console.error('Failed to fetch organization:', orgError)\n        } else {\n          organization = orgData\n        }\n      }\n\n      return { profile, organization }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  /**\n   * Sign out user\n   */\n  static async signOut(): Promise<void> {\n    try {\n      const { error } = await supabase.auth.signOut()\n      if (error) {\n        throw new Error(error.message)\n      }\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/app/signup/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport Link from 'next/link'\nimport { Bot, Eye, EyeOff, Loader2, Building2, CheckCircle } from 'lucide-react'\nimport { AuthService } from '@/lib/auth-service'\n\nexport default function SignupPage() {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    fullName: '',\n    organizationName: '',\n    organizationSlug: '',\n  })\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [success, setSuccess] = useState(false)\n  const router = useRouter()\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }))\n\n    // Auto-generate organization slug from organization name\n    if (name === 'organizationName') {\n      const slug = value\n        .toLowerCase()\n        .replace(/[^a-z0-9]/g, '-')\n        .replace(/-+/g, '-')\n        .replace(/^-|-$/g, '')\n      setFormData(prev => ({\n        ...prev,\n        organizationSlug: slug\n      }))\n    }\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError('')\n    setSuccess(false)\n\n    // Validation\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match')\n      setLoading(false)\n      return\n    }\n\n    if (formData.password.length < 8) {\n      setError('Password must be at least 8 characters long')\n      setLoading(false)\n      return\n    }\n\n    try {\n      const result = await AuthService.signup({\n        email: formData.email,\n        password: formData.password,\n        fullName: formData.fullName,\n        organizationName: formData.organizationName,\n        organizationSlug: formData.organizationSlug,\n      })\n\n      setSuccess(true)\n      setLoading(false)\n      \n      // Redirect to dashboard after a short delay\n      setTimeout(() => {\n        router.push('/dashboard')\n      }, 2000)\n\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'An unexpected error occurred')\n      setLoading(false)\n    }\n  }\n\n  if (success) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8 text-center\">\n          <div className=\"flex justify-center\">\n            <CheckCircle className=\"h-16 w-16 text-green-600\" />\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900\">\n            Account Created Successfully!\n          </h2>\n          <p className=\"text-lg text-gray-600\">\n            Welcome to ScaleWize AI! Your organization \"{formData.organizationName}\" has been created and you're now the admin.\n          </p>\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n            <p className=\"text-sm text-green-800\">\n              Please check your email to confirm your account before signing in.\n            </p>\n          </div>\n          <div className=\"pt-4\">\n            <Link\n              href=\"/login\"\n              className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white\"\n              style={{ backgroundColor: '#595F39' }}\n            >\n              Continue to Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <Bot className=\"h-12 w-12\" style={{ color: '#595F39' }} />\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            Create your ScaleWize AI account\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Set up your organization and start automating with AI\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            {/* Organization Information */}\n            <div className=\"bg-white p-6 rounded-lg border border-gray-200 shadow-sm\">\n              <div className=\"flex items-center mb-4\">\n                <Building2 className=\"h-5 w-5 mr-2\" style={{ color: '#595F39' }} />\n                <h3 className=\"text-lg font-semibold text-gray-900\">Organization</h3>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"organizationName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Organization Name\n                  </label>\n                  <input\n                    id=\"organizationName\"\n                    name=\"organizationName\"\n                    type=\"text\"\n                    required\n                    value={formData.organizationName}\n                    onChange={handleInputChange}\n                    className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-0\"\n                    style={{ '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                    placeholder=\"Your company name\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"organizationSlug\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Organization URL\n                  </label>\n                  <div className=\"flex rounded-md shadow-sm\">\n                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                      scalewize.ai/\n                    </span>\n                    <input\n                      id=\"organizationSlug\"\n                      name=\"organizationSlug\"\n                      type=\"text\"\n                      required\n                      value={formData.organizationSlug}\n                      onChange={handleInputChange}\n                      className=\"flex-1 block w-full px-3 py-2 border border-gray-300 rounded-none rounded-r-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-0\"\n                      style={{ '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                      placeholder=\"your-company\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Personal Information */}\n            <div className=\"bg-white p-6 rounded-lg border border-gray-200 shadow-sm\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Personal Information</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Full Name\n                  </label>\n                  <input\n                    id=\"fullName\"\n                    name=\"fullName\"\n                    type=\"text\"\n                    required\n                    value={formData.fullName}\n                    onChange={handleInputChange}\n                    className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-0\"\n                    style={{ '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                    placeholder=\"Your full name\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email address\n                  </label>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-0\"\n                    style={{ '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Password Information */}\n            <div className=\"bg-white p-6 rounded-lg border border-gray-200 shadow-sm\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Security</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Password\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      autoComplete=\"new-password\"\n                      required\n                      value={formData.password}\n                      onChange={handleInputChange}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-0 pr-10\"\n                      style={{ '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                      placeholder=\"Create a password\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? (\n                        <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                      ) : (\n                        <Eye className=\"h-5 w-5 text-gray-400\" />\n                      )}\n                    </button>\n                  </div>\n                  <p className=\"mt-1 text-xs text-gray-500\">Must be at least 8 characters long</p>\n                </div>\n\n                <div>\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Confirm Password\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      id=\"confirmPassword\"\n                      name=\"confirmPassword\"\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      autoComplete=\"new-password\"\n                      required\n                      value={formData.confirmPassword}\n                      onChange={handleInputChange}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-0 pr-10\"\n                      style={{ '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                      placeholder=\"Confirm your password\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    >\n                      {showConfirmPassword ? (\n                        <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                      ) : (\n                        <Eye className=\"h-5 w-5 text-gray-400\" />\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md text-sm\">\n              {error}\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-base font-medium rounded-md text-white disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\n              style={{ backgroundColor: '#595F39' }}\n            >\n              {loading ? (\n                <Loader2 className=\"h-5 w-5 animate-spin\" />\n              ) : (\n                'Create Account'\n              )}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Already have an account?{' '}\n              <Link href=\"/login\" className=\"font-medium\" style={{ color: '#595F39' }}>\n                Sign in\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}