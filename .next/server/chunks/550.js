"use strict";exports.id=550,exports.ids=[550],exports.modules={25541:(e,t,r)=>{r.d(t,{A:()=>n});let n=(0,r(62688).A)("trending-up",[["path",{d:"M16 7h6v6",key:"box55l"}],["path",{d:"m22 7-8.5 8.5-5-5L2 17",key:"1t1m79"}]])},68413:(e,t,r)=>{r.d(t,{K:()=>s});var n=r(70307);class a{constructor(e){this.organizationId=e}async getAnalytics(){try{let{data:e,error:t}=await n.N.rpc("get_linkedin_analytics",{org_id:this.organizationId});if(t)return console.error("Error fetching LinkedIn analytics:",t),null;return e}catch(e){return console.error("Error in getAnalytics:",e),null}}async getLeads(e){try{let t=n.N.from("leads").select("*").eq("organization_id",this.organizationId).not("linkedin_url","is",null).order("created_at",{ascending:!1});e&&"all"!==e&&(t=t.eq("status",e));let{data:r,error:a}=await t;if(a)return console.error("Error fetching LinkedIn leads:",a),[];return r||[]}catch(e){return console.error("Error in getLeads:",e),[]}}async getLeadMessages(e){try{let{data:t,error:r}=await n.N.from("messages").select("*").or(`sender_linkedin_url.eq.${e},recipient_linkedin_url.eq.${e}`).in("message_type",["connection_request","first_message","response"]).order("message_date",{ascending:!0});if(r)return console.error("Error fetching lead messages:",r),[];return t||[]}catch(e){return console.error("Error in getLeadMessages:",e),[]}}async addLead(e){try{let{data:t,error:r}=await n.N.from("leads").insert({...e,organization_id:this.organizationId,status:"PENDING"}).select().single();if(r)return console.error("Error adding LinkedIn lead:",r),null;return t}catch(e){return console.error("Error in addLead:",e),null}}async updateLeadStatus(e,t){try{let{error:r}=await n.N.from("leads").update({status:t,updated_at:new Date().toISOString()}).eq("id",e).eq("organization_id",this.organizationId);if(r)return console.error("Error updating lead status:",r),!1;return!0}catch(e){return console.error("Error in updateLeadStatus:",e),!1}}async addMessage(e,t,r,a=!1){try{let s={organization_id:this.organizationId,message_type:t,content:r,message_date:new Date().toISOString()};a?(s.sender_linkedin_url=e,s.recipient_linkedin_url=null):(s.sender_linkedin_url=null,s.recipient_linkedin_url=e);let{error:o}=await n.N.from("messages").insert(s);if(o)return console.error("Error adding LinkedIn message:",o),!1;return!0}catch(e){return console.error("Error in addMessage:",e),!1}}async getDailyMetrics(e=7){try{let t=new Date,r=new Date;r.setDate(r.getDate()-e);let{data:a,error:s}=await n.N.from("leads").select("created_at").eq("organization_id",this.organizationId).not("linkedin_url","is",null).gte("created_at",r.toISOString()).lte("created_at",t.toISOString());if(s)return console.error("Error fetching leads for metrics:",s),[];let{data:o,error:i}=await n.N.from("messages").select("message_date, message_type").eq("organization_id",this.organizationId).in("message_type",["connection_request","first_message","response"]).gte("message_date",r.toISOString()).lte("message_date",t.toISOString());if(i)return console.error("Error fetching messages for metrics:",i),[];let l={};for(let t=0;t<e;t++){let e=new Date(r);e.setDate(e.getDate()+t),l[e.toISOString().split("T")[0]]={leads:0,messages:0,replies:0}}return a?.forEach(e=>{let t=e.created_at.split("T")[0];l[t]&&l[t].leads++}),o?.forEach(e=>{let t=e.message_date?.split("T")[0];t&&l[t]&&(l[t].messages++,"response"===e.message_type&&l[t].replies++)}),Object.entries(l).map(([e,t])=>({date:e,...t}))}catch(e){return console.error("Error in getDailyMetrics:",e),[]}}async getLeadSources(){try{let{data:e,error:t}=await n.N.from("leads").select("company").eq("organization_id",this.organizationId).not("linkedin_url","is",null).not("company","is",null);if(t)return console.error("Error fetching lead sources:",t),[];let r={};e?.forEach(e=>{e.company&&(r[e.company]=(r[e.company]||0)+1)});let a=Object.values(r).reduce((e,t)=>e+t,0);return Object.entries(r).map(([e,t])=>({source:e,count:t,percentage:Math.round(t/a*100)})).sort((e,t)=>t.count-e.count).slice(0,10)}catch(e){return console.error("Error in getLeadSources:",e),[]}}async getDetailedMetrics(){try{let e=await this.getAnalytics();if(!e)return null;let t=e.total_leads;e.connected_leads,e.responded_leads,e.booked_leads,t>0&&e.closed_leads;let r=await this.getLeads(),n=0,a=0;r.forEach(e=>{if(e.connection_request_sent_at&&e.last_contact_at&&"RESPONDED"===e.status){let t=new Date(e.connection_request_sent_at).getTime(),r=new Date(e.last_contact_at).getTime();n+=r-t,a++}});let s=a>0?Math.round(n/a/864e5):0,o=5e3*r.filter(e=>["CONNECTED","RESPONDED","ACTIVE","BOOKED"].includes(e.status)).length,i={};r.forEach(e=>{e.company&&(i[e.company]||(i[e.company]={leads:0,closed:0}),i[e.company].leads++,"CLOSED"===e.status&&i[e.company].closed++)});let l=Object.entries(i).map(([e,t])=>({company:e,leads:t.leads,conversionRate:t.leads>0?Math.round(t.closed/t.leads*100):0})).sort((e,t)=>t.conversionRate-e.conversionRate).slice(0,5),d=[];for(let e=3;e>=0;e--){let t=new Date;t.setDate(t.getDate()-7*e);let n=new Date(t);n.setDate(n.getDate()+6);let a=r.filter(e=>{let r=new Date(e.created_at);return r>=t&&r<=n}).length,s=r.filter(e=>{if(!e.last_contact_at)return!1;let r=new Date(e.last_contact_at);return r>=t&&r<=n&&"RESPONDED"===e.status}).length;r.filter(e=>{if(!e.last_contact_at)return!1;let r=new Date(e.last_contact_at);return r>=t&&r<=n&&"CLOSED"===e.status}).length,d.push({week:t.toLocaleDateString("en-US",{month:"short",day:"numeric"}),leads:a,responses:s,connections:a})}let c={};r.forEach(e=>{c[e.status]=(c[e.status]||0)+1});let _=e.connection_requests_sent||0,u=e.connected_leads||0,g=e.responses_received||0,m=e.responded_leads+e.booked_leads||0,h=t>0?Math.round(u/t*100):0,p=t>0?Math.round((e.responded_leads+e.booked_leads+e.closed_leads)/t*100):0,f=t>0?Math.round(m/t*100):0,y=0,D=0;r.forEach(e=>{if(e.connection_request_sent_at&&e.first_message_sent_at){let t=new Date(e.connection_request_sent_at).getTime(),r=new Date(e.first_message_sent_at).getTime();y+=r-t,D++}});let E=D>0?Math.round(y/D/864e5):0,w=e.total_messages||0,k=e.connection_requests_sent+e.first_messages_sent||0,S=e.responses_received||0,N=t>0?Math.round(w/t*10)/10:0;return{totalLeads:t,connectionRequestsSent:_,connectionsMade:u,responses:g,activeConversations:m,connectionRate:h,responseRate:p,activeConversationRate:f,avgTimeToResponse:s,avgTimeToConnection:E,pipelineValue:o,statusBreakdown:c,topPerformingCompanies:l,weeklyTrends:d,totalMessages:w,messagesSent:k,messagesReceived:S,avgMessagesPerLead:N}}catch(e){return console.error("Error in getExecutiveMetrics:",e),null}}async getWeeklyMessageData(){try{let{data:e,error:t}=await n.N.rpc("get_weekly_linkedin_analytics",{org_id:this.organizationId,weeks_back:8});if(t)throw console.error("Supabase RPC error:",t),t;return e||[]}catch(e){throw console.error("Error in getWeeklyMessageData:",e),e}}async getDashboardMetrics(){try{let e=await this.getAnalytics();if(!e)return null;let t=e.total_leads,r=e.connected_leads+e.responded_leads+e.booked_leads,n=t>0?Math.round(e.closed_leads/t*100):0;return{totalLeads:t,activeLeads:r,conversionRate:n}}catch(e){return console.error("Error in getDashboardMetrics:",e),null}}async updateAllLeadStatuses(){try{let[e,t]=await Promise.all([this.getLeads(),n.N.from("messages").select("*").eq("organization_id",this.organizationId).in("message_type",["connection_request","first_message","response"]).then(({data:e,error:t})=>{if(t)throw t;return e||[]})]),r=[],a={};for(let n of e){let e=t.filter(e=>e.recipient_linkedin_url===n.linkedin_url||e.sender_linkedin_url===n.linkedin_url);if(0===e.length)continue;let s=n.status,o={};e.some(e=>e.recipient_linkedin_url===n.linkedin_url&&"first_message"===e.message_type)&&"SENT"===n.status&&(s="CONNECTED",o.first_message_sent_at=e.filter(e=>e.recipient_linkedin_url===n.linkedin_url&&"first_message"===e.message_type).sort((e,t)=>new Date(e.message_date||"").getTime()-new Date(t.message_date||"").getTime())[0]?.message_date);let i=e.filter(e=>e.sender_linkedin_url===n.linkedin_url&&"response"===e.message_type);i.length>0&&["SENT","CONNECTED"].includes(s)&&(s="RESPONDED"),i.length>1&&"RESPONDED"===s&&(s="ACTIVE");let l=e.filter(e=>e.recipient_linkedin_url===n.linkedin_url&&"connection_request"===e.message_type);l.length>0&&!n.connection_request_sent_at&&(o.connection_request_sent_at=l.sort((e,t)=>new Date(e.message_date||"").getTime()-new Date(t.message_date||"").getTime())[0]?.message_date);let d=e.sort((e,t)=>new Date(t.message_date||"").getTime()-new Date(e.message_date||"").getTime())[0];d&&(o.last_contact_at=d.message_date),(s!==n.status||Object.keys(o).length>0)&&r.push({id:n.id,status:s,...o,updated_at:new Date().toISOString()}),a[s]=(a[s]||0)+1}if(r.length>0){let{error:e}=await n.N.from("leads").upsert(r,{onConflict:"id"});if(e)return console.error("Error updating leads:",e),null}return{totalLeads:e.length,updatedLeads:r.length,statusDistribution:a}}catch(e){return console.error("Error in updateAllLeadStatuses:",e),null}}}let s=e=>new a(e)}};