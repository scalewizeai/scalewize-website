{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/lib/supabase-client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\nimport { Database } from '@/types/database'\n\nexport const supabase = createBrowserClient<Database>(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n)\n"],"names":[],"mappings":";;;AAIE;AAJF;AAAA;;AAGO,MAAM,WAAW,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/app/signup/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport Link from 'next/link'\nimport { Bot, Eye, EyeOff, Loader2, Building2 } from 'lucide-react'\nimport { supabase } from '@/lib/supabase-client'\n\nexport default function SignupPage() {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    fullName: '',\n    organizationName: '',\n    organizationSlug: '',\n  })\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [success, setSuccess] = useState('')\n  const router = useRouter()\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }))\n\n    // Auto-generate organization slug from organization name\n    if (name === 'organizationName') {\n      const slug = value\n        .toLowerCase()\n        .replace(/[^a-z0-9]/g, '-')\n        .replace(/-+/g, '-')\n        .replace(/^-|-$/g, '')\n      setFormData(prev => ({\n        ...prev,\n        organizationSlug: slug\n      }))\n    }\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError('')\n\n    // Validation\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match')\n      setLoading(false)\n      return\n    }\n\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long')\n      setLoading(false)\n      return\n    }\n\n    try {\n      // Create user account\n      const { data: authData, error: authError } = await supabase.auth.signUp({\n        email: formData.email,\n        password: formData.password,\n        options: {\n          data: {\n            full_name: formData.fullName,\n            organization_name: formData.organizationName,\n            organization_slug: formData.organizationSlug,\n          }\n        }\n      })\n\n      if (authError) {\n        setError(authError.message)\n        setLoading(false)\n        return\n      }\n\n      if (authData.user) {\n        // Check if email confirmation is required\n        if (authData.session) {\n          // User is immediately authenticated (email confirmation disabled)\n          await createOrganizationAndProfile(authData.user.id)\n        } else {\n          // Email confirmation required - show success message\n          setSuccess('Please check your email to confirm your account before continuing.')\n          setLoading(false)\n          return\n        }\n      }\n    } catch (error) {\n      console.error('Signup error:', error)\n      setError('An unexpected error occurred')\n      setLoading(false)\n    }\n  }\n\n  const createOrganizationAndProfile = async (userId: string) => {\n    try {\n      // Create organization first\n      const { data: orgData, error: orgError } = await supabase\n        .from('organizations')\n        .insert({\n          name: formData.organizationName,\n          domain: formData.organizationSlug,\n          subscription_status: 'trial',\n          plan_type: 'starter',\n          max_users: 50,\n          max_chat_sessions: 1000,\n          monthly_token_limit: 100000,\n          librechat_config: {},\n        })\n        .select()\n        .single()\n\n      if (orgError) {\n        console.error('Organization creation error:', orgError)\n        setError('Failed to create organization: ' + orgError.message)\n        setLoading(false)\n        return\n      }\n\n      // Create user profile\n      const { error: profileError } = await supabase\n        .from('profiles')\n        .insert({\n          id: userId,\n          email: formData.email,\n          full_name: formData.fullName,\n          organization_id: orgData.id,\n          role: 'admin', // First user is admin\n          is_active: true,\n        })\n\n      if (profileError) {\n        console.error('Profile creation error:', profileError)\n        setError('Failed to create user profile: ' + profileError.message)\n        setLoading(false)\n        return\n      }\n\n      // Success - redirect to dashboard\n      router.push('/dashboard')\n    } catch (error) {\n      console.error('Organization/profile creation error:', error)\n      setError('Failed to complete account setup')\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <Bot className=\"h-12 w-12 text-blue-600\" />\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            Create your ScaleWize AI account\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Set up your organization and start automating with AI\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            {/* Organization Information */}\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"flex items-center mb-3\">\n                <Building2 className=\"h-5 w-5 text-blue-600 mr-2\" />\n                <h3 className=\"text-sm font-medium text-blue-900\">Organization</h3>\n              </div>\n              \n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"organizationName\" className=\"block text-sm font-medium text-gray-700\">\n                    Organization Name\n                  </label>\n                  <input\n                    id=\"organizationName\"\n                    name=\"organizationName\"\n                    type=\"text\"\n                    required\n                    value={formData.organizationName}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Your company name\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"organizationSlug\" className=\"block text-sm font-medium text-gray-700\">\n                    Organization URL\n                  </label>\n                  <div className=\"mt-1 flex rounded-md shadow-sm\">\n                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                      scalewize.ai/\n                    </span>\n                    <input\n                      id=\"organizationSlug\"\n                      name=\"organizationSlug\"\n                      type=\"text\"\n                      required\n                      value={formData.organizationSlug}\n                      onChange={handleInputChange}\n                      className=\"flex-1 block w-full px-3 py-2 border border-gray-300 rounded-none rounded-r-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"your-company\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Personal Information */}\n            <div>\n              <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700\">\n                Full Name\n              </label>\n              <input\n                id=\"fullName\"\n                name=\"fullName\"\n                type=\"text\"\n                required\n                value={formData.fullName}\n                onChange={handleInputChange}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Your full name\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={formData.email}\n                onChange={handleInputChange}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 pr-10\"\n                  placeholder=\"Create a password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                Confirm Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 pr-10\"\n                  placeholder=\"Confirm your password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md text-sm\">\n              {error}\n            </div>\n          )}\n\n          {success && (\n            <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md text-sm\">\n              {success}\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? (\n                <Loader2 className=\"h-5 w-5 animate-spin\" />\n              ) : (\n                'Create Account'\n              )}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Already have an account?{' '}\n              <Link href=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                Sign in\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}