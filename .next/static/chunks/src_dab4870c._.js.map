{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/lib/supabase-client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\nimport { Database } from '@/types/database'\n\nexport const supabase = createBrowserClient<Database>(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n)\n"],"names":[],"mappings":";;;AAIE;AAJF;AAAA;;AAGO,MAAM,WAAW,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/app/login/LoginPageInner.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Bot, Eye, EyeOff, Loader2 } from 'lucide-react';\nimport { supabase } from '@/lib/supabase-client';\n\nexport default function LoginPageInner() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [checkingSession, setCheckingSession] = useState(true);\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const redirectTo = searchParams.get('redirectTo') || '/dashboard';\n\n  useEffect(() => {\n    supabase.auth.getSession().then(async ({ data: { session } }) => {\n      if (\n        session &&\n        session.user &&\n        (!session.expires_at || session.expires_at * 1000 > Date.now())\n      ) {\n        // Try fetching the user's profile\n        const { data, error } = await supabase\n          .from('profiles')\n          .select('*')\n          .eq('id', session.user.id)\n          .single();\n\n        if (data && !error) {\n          router.push('/dashboard');\n        } else {\n          // Session is invalid for data fetches, force logout\n          await supabase.auth.signOut();\n          localStorage.clear();\n          sessionStorage.clear();\n          document.cookie.split(';').forEach((c) => {\n            if (c.includes('sb-')) {\n              document.cookie = c\n                .replace(/^ +/, '')\n                .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\n            }\n          });\n          setCheckingSession(false);\n        }\n      } else {\n        setCheckingSession(false);\n      }\n    });\n  }, [router]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) {\n        setError(error.message);\n        setLoading(false);\n        return;\n      }\n\n      if (!data || !data.user) {\n        setError('No user returned from Supabase');\n        setLoading(false);\n        return;\n      }\n\n      // Fetch profile after login\n      const { data: profile, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', data.user.id)\n        .single();\n\n      if (profile && !profileError) {\n        window.location.href = redirectTo;\n      } else {\n        setError('Profile not found');\n        setLoading(false);\n      }\n    } catch (err) {\n      setError('Unexpected error');\n      setLoading(false);\n    }\n  };\n\n  if (checkingSession) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-blue-600\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\" style={{ background: '#f8f7f4', fontFamily: 'Arial, Helvetica, sans-serif' }}>\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <Image src=\"/scalewize_cover_logo.png\" alt=\"ScaleWize AI Cover Logo\" width={360} height={80} className=\"h-24 w-auto\" />\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold\" style={{ color: '#595F39' }}>\n            Sign in\n          </h2>\n          <p className=\"mt-2 text-sm\" style={{ color: '#000' }}>\n            Communicate and work with your team of AI agents, implemented across your company\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium\" style={{ color: '#000' }}>\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2\"\n                style={{ color: '#000', '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium\" style={{ color: '#000' }}>\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 pr-10\"\n                  style={{ color: '#000', '--tw-ring-color': '#595F39' } as React.CSSProperties}\n                  placeholder=\"Enter your password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5\" style={{ color: '#595F39' }} />\n                  ) : (\n                    <Eye className=\"h-5 w-5\" style={{ color: '#595F39' }} />\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md text-sm\">\n              {error}\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n              style={{ background: '#595F39', '--tw-ring-color': '#595F39' } as React.CSSProperties}\n            >\n              {loading ? (\n                <Loader2 className=\"h-5 w-5 animate-spin\" />\n              ) : (\n                'Sign in'\n              )}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm\" style={{ color: '#000' }}>\n              Don't have an account?{' '}\n              <Link href=\"/signup\" className=\"font-medium\" style={{ color: '#595F39' }}>\n                Sign up\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebkeating/Documents/ScaleWize/Web%20Dev/scalewize-website/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport LoginPageInner from './LoginPageInner';\n\nexport default function LoginPage() {\n  return <LoginPageInner />;\n} "],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKe,SAAS;IACtB,qBAAO,6LAAC,yIAAA,CAAA,UAAc;;;;;AACxB;KAFwB","debugId":null}}]
}